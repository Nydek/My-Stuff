Starting parse
Entering state 0
Reducing stack by rule 8 (line 50):
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --(end of buffer or a NUL)
--accepting rule at line 33 ("# 1 "11-numbers.oc"")
--accepting rule at line 35 ("
")
--accepting rule at line 33 ("# 1 "<command-line>"")
--accepting rule at line 35 ("
")
--accepting rule at line 33 ("# 1 "11-numbers.oc"")
--accepting rule at line 35 ("
")
--accepting rule at line 35 ("
")
--accepting rule at line 35 ("
")
--accepting rule at line 33 ("# 1 "oclib.oh" 1")
--accepting rule at line 35 ("
")
--accepting rule at line 33 ("# 23 "oclib.oh"")
--accepting rule at line 35 ("
")
--accepting rule at line 37 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 15 (line 82):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 32
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 55 ("__assert_fail")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 26 (line 111):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 35
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 76
Reducing stack by rule 23 (line 102):
   $1 = token '(' ()
-> $$ = nterm funparams ()
Stack now 0 2 35
Entering state 77
Reading a token: --accepting rule at line 41 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 9
Reducing stack by rule 19 (line 86):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2 35 77
Entering state 32
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 55 ("expr")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 26 (line 111):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 35 77
Entering state 115
Reducing stack by rule 24 (line 104):
   $1 = nterm funparams ()
   $2 = nterm identdecl ()
-> $$ = nterm funparams ()
Stack now 0 2 35
Entering state 77
Reading a token: --accepting rule at line 74 (",")
Next token is token ',' ()
Shifting token ',' ()
Entering state 114
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 41 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 9
Reducing stack by rule 19 (line 86):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2 35 77 114
Entering state 32
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 55 ("file")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 26 (line 111):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 35 77 114
Entering state 142
Reducing stack by rule 25 (line 106):
   $1 = nterm funparams ()
   $2 = token ',' ()
   $3 = nterm identdecl ()
-> $$ = nterm funparams ()
Stack now 0 2 35
Entering state 77
Reading a token: --accepting rule at line 74 (",")
Next token is token ',' ()
Shifting token ',' ()
Entering state 114
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 40 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 8
Reducing stack by rule 18 (line 85):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2 35 77 114
Entering state 32
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 55 ("line")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 26 (line 111):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 35 77 114
Entering state 142
Reducing stack by rule 25 (line 106):
   $1 = nterm funparams ()
   $2 = token ',' ()
   $3 = nterm identdecl ()
-> $$ = nterm funparams ()
Stack now 0 2 35
Entering state 77
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 113
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 140
Reducing stack by rule 22 (line 97):
   $1 = nterm identdecl ()
   $2 = nterm funparams ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm prototype ()
Stack now 0 2
Entering state 34
Reducing stack by rule 4 (line 44):
   $1 = nterm program ()
   $2 = nterm prototype ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 37 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 15 (line 82):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 32
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 55 ("putb")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 26 (line 111):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 35
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 76
Reducing stack by rule 23 (line 102):
   $1 = token '(' ()
-> $$ = nterm funparams ()
Stack now 0 2 35
Entering state 77
Reading a token: --accepting rule at line 38 ("bool")
Next token is token TOK_BOOL ()
Shifting token TOK_BOOL ()
Entering state 6
Reducing stack by rule 16 (line 83):
   $1 = token TOK_BOOL ()
-> $$ = nterm basetype ()
Stack now 0 2 35 77
Entering state 32
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 55 ("b")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 26 (line 111):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 35 77
Entering state 115
Reducing stack by rule 24 (line 104):
   $1 = nterm funparams ()
   $2 = nterm identdecl ()
-> $$ = nterm funparams ()
Stack now 0 2 35
Entering state 77
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 113
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 140
Reducing stack by rule 22 (line 97):
   $1 = nterm identdecl ()
   $2 = nterm funparams ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm prototype ()
Stack now 0 2
Entering state 34
Reducing stack by rule 4 (line 44):
   $1 = nterm program ()
   $2 = nterm prototype ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 37 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 15 (line 82):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 32
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 55 ("putc")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 26 (line 111):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 35
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 76
Reducing stack by rule 23 (line 102):
   $1 = token '(' ()
-> $$ = nterm funparams ()
Stack now 0 2 35
Entering state 77
Reading a token: --accepting rule at line 39 ("char")
Next token is token TOK_CHAR ()
Shifting token TOK_CHAR ()
Entering state 7
Reducing stack by rule 17 (line 84):
   $1 = token TOK_CHAR ()
-> $$ = nterm basetype ()
Stack now 0 2 35 77
Entering state 32
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 55 ("c")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 26 (line 111):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 35 77
Entering state 115
Reducing stack by rule 24 (line 104):
   $1 = nterm funparams ()
   $2 = nterm identdecl ()
-> $$ = nterm funparams ()
Stack now 0 2 35
Entering state 77
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 113
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 140
Reducing stack by rule 22 (line 97):
   $1 = nterm identdecl ()
   $2 = nterm funparams ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm prototype ()
Stack now 0 2
Entering state 34
Reducing stack by rule 4 (line 44):
   $1 = nterm program ()
   $2 = nterm prototype ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 37 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 15 (line 82):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 32
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 55 ("puti")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 26 (line 111):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 35
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 76
Reducing stack by rule 23 (line 102):
   $1 = token '(' ()
-> $$ = nterm funparams ()
Stack now 0 2 35
Entering state 77
Reading a token: --accepting rule at line 40 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 8
Reducing stack by rule 18 (line 85):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2 35 77
Entering state 32
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 55 ("i")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 26 (line 111):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 35 77
Entering state 115
Reducing stack by rule 24 (line 104):
   $1 = nterm funparams ()
   $2 = nterm identdecl ()
-> $$ = nterm funparams ()
Stack now 0 2 35
Entering state 77
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 113
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 140
Reducing stack by rule 22 (line 97):
   $1 = nterm identdecl ()
   $2 = nterm funparams ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm prototype ()
Stack now 0 2
Entering state 34
Reducing stack by rule 4 (line 44):
   $1 = nterm program ()
   $2 = nterm prototype ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 37 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 15 (line 82):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 32
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 55 ("puts")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 26 (line 111):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 35
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 76
Reducing stack by rule 23 (line 102):
   $1 = token '(' ()
-> $$ = nterm funparams ()
Stack now 0 2 35
Entering state 77
Reading a token: --accepting rule at line 41 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 9
Reducing stack by rule 19 (line 86):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2 35 77
Entering state 32
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 55 ("s")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 26 (line 111):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 35 77
Entering state 115
Reducing stack by rule 24 (line 104):
   $1 = nterm funparams ()
   $2 = nterm identdecl ()
-> $$ = nterm funparams ()
Stack now 0 2 35
Entering state 77
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 113
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 140
Reducing stack by rule 22 (line 97):
   $1 = nterm identdecl ()
   $2 = nterm funparams ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm prototype ()
Stack now 0 2
Entering state 34
Reducing stack by rule 4 (line 44):
   $1 = nterm program ()
   $2 = nterm prototype ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 37 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 15 (line 82):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 32
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 55 ("endl")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 26 (line 111):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 35
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 76
Reducing stack by rule 23 (line 102):
   $1 = token '(' ()
-> $$ = nterm funparams ()
Stack now 0 2 35
Entering state 77
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 113
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 140
Reducing stack by rule 22 (line 97):
   $1 = nterm identdecl ()
   $2 = nterm funparams ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm prototype ()
Stack now 0 2
Entering state 34
Reducing stack by rule 4 (line 44):
   $1 = nterm program ()
   $2 = nterm prototype ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 40 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 8
Reducing stack by rule 18 (line 85):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 32
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 55 ("getc")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 26 (line 111):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 35
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 76
Reducing stack by rule 23 (line 102):
   $1 = token '(' ()
-> $$ = nterm funparams ()
Stack now 0 2 35
Entering state 77
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 113
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 140
Reducing stack by rule 22 (line 97):
   $1 = nterm identdecl ()
   $2 = nterm funparams ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm prototype ()
Stack now 0 2
Entering state 34
Reducing stack by rule 4 (line 44):
   $1 = nterm program ()
   $2 = nterm prototype ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 41 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 9
Reducing stack by rule 19 (line 86):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 32
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 55 ("getw")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 26 (line 111):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 35
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 76
Reducing stack by rule 23 (line 102):
   $1 = token '(' ()
-> $$ = nterm funparams ()
Stack now 0 2 35
Entering state 77
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 113
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 140
Reducing stack by rule 22 (line 97):
   $1 = nterm identdecl ()
   $2 = nterm funparams ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm prototype ()
Stack now 0 2
Entering state 34
Reducing stack by rule 4 (line 44):
   $1 = nterm program ()
   $2 = nterm prototype ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 41 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 9
Reducing stack by rule 19 (line 86):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 32
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 55 ("getln")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 26 (line 111):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 35
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 76
Reducing stack by rule 23 (line 102):
   $1 = token '(' ()
-> $$ = nterm funparams ()
Stack now 0 2 35
Entering state 77
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 113
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 140
Reducing stack by rule 22 (line 97):
   $1 = nterm identdecl ()
   $2 = nterm funparams ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm prototype ()
Stack now 0 2
Entering state 34
Reducing stack by rule 4 (line 44):
   $1 = nterm program ()
   $2 = nterm prototype ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 41 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 9
Reducing stack by rule 19 (line 86):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 32
Reading a token: --accepting rule at line 62 ("[]")
Next token is token TOK_ARRAY ()
Shifting token TOK_ARRAY ()
Entering state 73
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 55 ("getargv")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 111
Reducing stack by rule 27 (line 114):
   $1 = nterm basetype ()
   $2 = token TOK_ARRAY ()
   $3 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 35
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 76
Reducing stack by rule 23 (line 102):
   $1 = token '(' ()
-> $$ = nterm funparams ()
Stack now 0 2 35
Entering state 77
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 113
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 140
Reducing stack by rule 22 (line 97):
   $1 = nterm identdecl ()
   $2 = nterm funparams ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm prototype ()
Stack now 0 2
Entering state 34
Reducing stack by rule 4 (line 44):
   $1 = nterm program ()
   $2 = nterm prototype ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 37 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 15 (line 82):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 32
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 55 ("exit")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 26 (line 111):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 35
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 76
Reducing stack by rule 23 (line 102):
   $1 = token '(' ()
-> $$ = nterm funparams ()
Stack now 0 2 35
Entering state 77
Reading a token: --accepting rule at line 40 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 8
Reducing stack by rule 18 (line 85):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2 35 77
Entering state 32
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 55 ("status")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 26 (line 111):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 35 77
Entering state 115
Reducing stack by rule 24 (line 104):
   $1 = nterm funparams ()
   $2 = nterm identdecl ()
-> $$ = nterm funparams ()
Stack now 0 2 35
Entering state 77
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 113
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 140
Reducing stack by rule 22 (line 97):
   $1 = nterm identdecl ()
   $2 = nterm funparams ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm prototype ()
Stack now 0 2
Entering state 34
Reducing stack by rule 4 (line 44):
   $1 = nterm program ()
   $2 = nterm prototype ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 33 ("# 4 "11-numbers.oc" 2")
--accepting rule at line 35 ("
")
--accepting rule at line 35 ("
")
--accepting rule at line 40 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 8
Reducing stack by rule 18 (line 85):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 32
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 55 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 74
Reducing stack by rule 26 (line 111):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 35
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 76 ("=")
Next token is token '=' ()
Shifting token '=' ()
Entering state 75
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 54 ("1")
Next token is token TOK_INTCON ()
Shifting token TOK_INTCON ()
Entering state 19
Reducing stack by rule 78 (line 239):
   $1 = token TOK_INTCON ()
-> $$ = nterm constant ()
Stack now 0 2 35 75
Entering state 49
Reducing stack by rule 67 (line 195):
   $1 = nterm constant ()
-> $$ = nterm expr ()
Stack now 0 2 35 75
Entering state 112
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 139
Reducing stack by rule 39 (line 139):
   $1 = nterm identdecl ()
   $2 = token '=' ()
   $3 = nterm expr ()
   $4 = token ';' ()
-> $$ = nterm vardecl ()
Stack now 0 2
Entering state 40
Reducing stack by rule 34 (line 131):
   $1 = nterm vardecl ()
-> $$ = nterm statement ()
Stack now 0 2
Entering state 39
Reducing stack by rule 5 (line 45):
   $1 = nterm program ()
   $2 = nterm statement ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 45 ("while")
Next token is token TOK_WHILE ()
Shifting token TOK_WHILE ()
Entering state 11
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 53
Reading a token: --accepting rule at line 55 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 54
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 78 (">")
Next token is token TOK_GT ()
Reducing stack by rule 75 (line 229):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 11 53
Entering state 48
Reducing stack by rule 66 (line 194):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 11 53
Entering state 99
Next token is token TOK_GT ()
Shifting token TOK_GT ()
Entering state 85
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 54 ("0")
Next token is token TOK_INTCON ()
Shifting token TOK_INTCON ()
Entering state 19
Reducing stack by rule 78 (line 239):
   $1 = token TOK_INTCON ()
-> $$ = nterm constant ()
Stack now 0 2 11 53 99 85
Entering state 49
Reducing stack by rule 67 (line 195):
   $1 = nterm constant ()
-> $$ = nterm expr ()
Stack now 0 2 11 53 99 85
Entering state 120
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Reducing stack by rule 50 (line 174):
   $1 = nterm expr ()
   $2 = token TOK_GT ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 2 11 53
Entering state 99
Next token is token ')' ()
Shifting token ')' ()
Entering state 132
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 71 ("{")
Next token is token '{' ()
Shifting token '{' ()
Entering state 28
Reducing stack by rule 31 (line 126):
   $1 = token '{' ()
-> $$ = nterm inblock ()
Stack now 0 2 11 53 99 132
Entering state 38
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 34 ("   ")
--accepting rule at line 55 ("puti")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 18
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 62
Reading a token: --accepting rule at line 55 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 54
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Reducing stack by rule 75 (line 229):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 11 53 99 132 38 18 62
Entering state 48
Reducing stack by rule 66 (line 194):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 11 53 99 132 38 18 62
Entering state 106
Next token is token ')' ()
Reducing stack by rule 73 (line 221):
   $1 = token TOK_IDENT ()
   $2 = token '(' ()
   $3 = nterm expr ()
-> $$ = nterm funargs ()
Stack now 0 2 11 53 99 132 38
Entering state 47
Next token is token ')' ()
Shifting token ')' ()
Entering state 96
Reducing stack by rule 72 (line 216):
   $1 = nterm funargs ()
   $2 = token ')' ()
-> $$ = nterm call ()
Stack now 0 2 11 53 99 132 38
Entering state 46
Reducing stack by rule 64 (line 192):
   $1 = nterm call ()
-> $$ = nterm expr ()
Stack now 0 2 11 53 99 132 38
Entering state 44
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 93
Reducing stack by rule 38 (line 135):
   $1 = nterm expr ()
   $2 = token ';' ()
-> $$ = nterm statement ()
Stack now 0 2 11 53 99 132 38
Entering state 80
Reducing stack by rule 32 (line 127):
   $1 = nterm inblock ()
   $2 = nterm statement ()
-> $$ = nterm inblock ()
Stack now 0 2 11 53 99 132
Entering state 38
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 34 ("   ")
--accepting rule at line 55 ("putc")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 18
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 62
Reading a token: --accepting rule at line 56 ("'\n'")
Next token is token TOK_CHARCON ()
Shifting token TOK_CHARCON ()
Entering state 20
Reducing stack by rule 79 (line 240):
   $1 = token TOK_CHARCON ()
-> $$ = nterm constant ()
Stack now 0 2 11 53 99 132 38 18 62
Entering state 49
Reducing stack by rule 67 (line 195):
   $1 = nterm constant ()
-> $$ = nterm expr ()
Stack now 0 2 11 53 99 132 38 18 62
Entering state 106
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Reducing stack by rule 73 (line 221):
   $1 = token TOK_IDENT ()
   $2 = token '(' ()
   $3 = nterm expr ()
-> $$ = nterm funargs ()
Stack now 0 2 11 53 99 132 38
Entering state 47
Next token is token ')' ()
Shifting token ')' ()
Entering state 96
Reducing stack by rule 72 (line 216):
   $1 = nterm funargs ()
   $2 = token ')' ()
-> $$ = nterm call ()
Stack now 0 2 11 53 99 132 38
Entering state 46
Reducing stack by rule 64 (line 192):
   $1 = nterm call ()
-> $$ = nterm expr ()
Stack now 0 2 11 53 99 132 38
Entering state 44
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 93
Reducing stack by rule 38 (line 135):
   $1 = nterm expr ()
   $2 = token ';' ()
-> $$ = nterm statement ()
Stack now 0 2 11 53 99 132 38
Entering state 80
Reducing stack by rule 32 (line 127):
   $1 = nterm inblock ()
   $2 = nterm statement ()
-> $$ = nterm inblock ()
Stack now 0 2 11 53 99 132
Entering state 38
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 34 ("   ")
--accepting rule at line 55 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 18
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 76 ("=")
Next token is token '=' ()
Reducing stack by rule 75 (line 229):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 11 53 99 132 38
Entering state 48
Reducing stack by rule 66 (line 194):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 11 53 99 132 38
Entering state 44
Next token is token '=' ()
Shifting token '=' ()
Entering state 87
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 55 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 54
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 79 ("+")
Next token is token '+' ()
Reducing stack by rule 75 (line 229):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 11 53 99 132 38 44 87
Entering state 48
Reducing stack by rule 66 (line 194):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 11 53 99 132 38 44 87
Entering state 122
Next token is token '+' ()
Shifting token '+' ()
Entering state 88
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 55 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 54
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Reducing stack by rule 75 (line 229):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 11 53 99 132 38 44 87 122 88
Entering state 48
Reducing stack by rule 66 (line 194):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 11 53 99 132 38 44 87 122 88
Entering state 123
Next token is token ';' ()
Reducing stack by rule 52 (line 176):
   $1 = nterm expr ()
   $2 = token '+' ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 2 11 53 99 132 38 44 87
Entering state 122
Next token is token ';' ()
Reducing stack by rule 45 (line 169):
   $1 = nterm expr ()
   $2 = token '=' ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 2 11 53 99 132 38
Entering state 44
Next token is token ';' ()
Shifting token ';' ()
Entering state 93
Reducing stack by rule 38 (line 135):
   $1 = nterm expr ()
   $2 = token ';' ()
-> $$ = nterm statement ()
Stack now 0 2 11 53 99 132 38
Entering state 80
Reducing stack by rule 32 (line 127):
   $1 = nterm inblock ()
   $2 = nterm statement ()
-> $$ = nterm inblock ()
Stack now 0 2 11 53 99 132
Entering state 38
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 72 ("}")
Next token is token '}' ()
Shifting token '}' ()
Entering state 78
Reducing stack by rule 30 (line 122):
   $1 = nterm inblock ()
   $2 = token '}' ()
-> $$ = nterm brcblock ()
Stack now 0 2 11 53 99 132
Entering state 37
Reducing stack by rule 28 (line 119):
   $1 = nterm brcblock ()
-> $$ = nterm block ()
Stack now 0 2 11 53 99 132
Entering state 36
Reducing stack by rule 33 (line 130):
   $1 = nterm block ()
-> $$ = nterm statement ()
Stack now 0 2 11 53 99 132
Entering state 145
Reducing stack by rule 40 (line 145):
   $1 = token TOK_WHILE ()
   $2 = token '(' ()
   $3 = nterm expr ()
   $4 = token ')' ()
   $5 = nterm statement ()
-> $$ = nterm while ()
Stack now 0 2
Entering state 41
Reducing stack by rule 35 (line 132):
   $1 = nterm while ()
-> $$ = nterm statement ()
Stack now 0 2
Entering state 39
Reducing stack by rule 5 (line 45):
   $1 = nterm program ()
   $2 = nterm statement ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 55 ("puti")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 18
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 62
Reading a token: --accepting rule at line 55 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 54
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Reducing stack by rule 75 (line 229):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 18 62
Entering state 48
Reducing stack by rule 66 (line 194):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 18 62
Entering state 106
Next token is token ')' ()
Reducing stack by rule 73 (line 221):
   $1 = token TOK_IDENT ()
   $2 = token '(' ()
   $3 = nterm expr ()
-> $$ = nterm funargs ()
Stack now 0 2
Entering state 47
Next token is token ')' ()
Shifting token ')' ()
Entering state 96
Reducing stack by rule 72 (line 216):
   $1 = nterm funargs ()
   $2 = token ')' ()
-> $$ = nterm call ()
Stack now 0 2
Entering state 46
Reducing stack by rule 64 (line 192):
   $1 = nterm call ()
-> $$ = nterm expr ()
Stack now 0 2
Entering state 44
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 93
Reducing stack by rule 38 (line 135):
   $1 = nterm expr ()
   $2 = token ';' ()
-> $$ = nterm statement ()
Stack now 0 2
Entering state 39
Reducing stack by rule 5 (line 45):
   $1 = nterm program ()
   $2 = nterm statement ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 55 ("putc")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 18
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 62
Reading a token: --accepting rule at line 56 ("'\n'")
Next token is token TOK_CHARCON ()
Shifting token TOK_CHARCON ()
Entering state 20
Reducing stack by rule 79 (line 240):
   $1 = token TOK_CHARCON ()
-> $$ = nterm constant ()
Stack now 0 2 18 62
Entering state 49
Reducing stack by rule 67 (line 195):
   $1 = nterm constant ()
-> $$ = nterm expr ()
Stack now 0 2 18 62
Entering state 106
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Reducing stack by rule 73 (line 221):
   $1 = token TOK_IDENT ()
   $2 = token '(' ()
   $3 = nterm expr ()
-> $$ = nterm funargs ()
Stack now 0 2
Entering state 47
Next token is token ')' ()
Shifting token ')' ()
Entering state 96
Reducing stack by rule 72 (line 216):
   $1 = nterm funargs ()
   $2 = token ')' ()
-> $$ = nterm call ()
Stack now 0 2
Entering state 46
Reducing stack by rule 64 (line 192):
   $1 = nterm call ()
-> $$ = nterm expr ()
Stack now 0 2
Entering state 44
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 93
Reducing stack by rule 38 (line 135):
   $1 = nterm expr ()
   $2 = token ';' ()
-> $$ = nterm statement ()
Stack now 0 2
Entering state 39
Reducing stack by rule 5 (line 45):
   $1 = nterm program ()
   $2 = nterm statement ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
Now at end of input.
Reducing stack by rule 1 (line 39):
   $1 = nterm program ()
-> $$ = nterm start ()
Stack now 0
Entering state 1
Now at end of input.
Shifting token $end ()
Entering state 3
Stack now 0 1 3
Cleanup: popping token $end ()
Cleanup: popping nterm start ()
